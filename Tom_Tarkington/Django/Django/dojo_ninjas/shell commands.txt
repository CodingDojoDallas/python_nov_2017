>>> Dojo.objects.last()
<Dojo: codingDojo New York New York NY>
>>> Dojo.objects.last().delete()
(1, {u'dojo_ninjas.Ninja': 0, u'dojo_ninjas.Dojo': 1})
>>> Dojo.objects.last()
<Dojo: codingDojo Seattle Seattle WA>
>>> Dojo.objects.create(name="codingDojo New York", city="New York", state="NY")
<Dojo: codingDojo New York New York NY>
>>> Dojo.objects.last()
<Dojo: codingDojo New York New York NY>
>>> Ninja.objects.create(first_name="Tom", last_name="T", dojo_id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\base.py", line 590, in __repr__
    u = six.text_type(self)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\TomT\Django\Django\dojo_ninjas\apps\dojo_ninjas\models.py", line 24, in __str__
    return"{} {} {}".format(self.first_name, self.last_name, self.dojo)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 184, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 159, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 380, in get
    self.model._meta.object_name
DoesNotExist: Dojo matching query does not exist.
>>> Ninja.objects.create(first_name="Tom", last_name="T", dojo_id="1")
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\base.py", line 590, in __repr__
    u = six.text_type(self)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\TomT\Django\Django\dojo_ninjas\apps\dojo_ninjas\models.py", line 24, in __str__
    return"{} {} {}".format(self.first_name, self.last_name, self.dojo)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 184, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\fields\related_descriptors.py", line 159, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 380, in get
    self.model._meta.object_name
DoesNotExist: Dojo matching query does not exist.
>>> Dojo.objects.first()
<Dojo: CodingDojo Silicone Valley Mountain View Ca>
>>> Ninja.object.create(first_name="Tom", last_name="T", dojo=Dojo.objects.get(id=1))
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Ninja' has no attribute 'object'
>>> D1 = Dojo.Objects.first()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Dojo' has no attribute 'Objects'
>>> D1 = Dojo.objects.first()
>>> Ninja.object.create(first_name="Tom", last_name="T", dojo=D1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: type object 'Ninja' has no attribute 'object'
>>> Ninja.objects.create(first_name="Tom", last_name="T", dojo=D1)
<Ninja: Tom T CodingDojo Silicone Valley Mountain View Ca>
>>> Ninja.objects.create(first_name="Staci", last_name="R", dojo=Dojo.objects.first())
<Ninja: Staci R CodingDojo Silicone Valley Mountain View Ca>
>>> Ninja.objects.create(first_name="Robert", last_name="Paulson", dojo=Dojo.objects.first())
<Ninja: Robert Paulson CodingDojo Silicone Valley Mountain View Ca>
>>> Dojo.objects.get(id=1)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\manager.py", line 85, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\db\models\query.py", line 380, in get
    self.model._meta.object_name
DoesNotExist: Dojo matching query does not exist.
>>>
Traceback (most recent call last):
  File "manage.py", line 22, in <module>
    execute_from_command_line(sys.argv)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\core\management\__init__.py", line 364, in execute_from_command_line
    utility.execute()
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\core\management\__init__.py", line 356, in execute
    self.fetch_command(subcommand).run_from_argv(self.argv)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\core\management\base.py", line 283, in run_from_argv
    self.execute(*args, **cmd_options)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\core\management\base.py", line 342, in execute
    translation.activate(saved_locale)
  File "C:\Users\thoma\OneDrive\CodingDojo\Python\myEnvironments\djangoEnv\lib\site-packages\django\utils\translation\__init__.py", line 165, in activate
    def activate(language):
KeyboardInterrupt

(djangoEnv) C:\Users\thoma\OneDrive\CodingDojo\Python\TomT\Django\Django\dojo_ninjas>python manage.py shell
Python 2.7.13 (v2.7.13:a06454b1afa1, Dec 17 2016, 20:53:40) [MSC v.1500 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
>>> User.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'User' is not defined
>>> from apps.dojo_ninjas.models import *
>>> User.objects.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'User' is not defined
>>> Dojo.objects.all()
<QuerySet [<Dojo: 4 CodingDojo Silicone Valley Mountain View Ca>, <Dojo: 5 CodingDojo Seattle Seattle WA>, <Dojo: 6 CodingDojo New York new York NY>, <Dojo: 7 codingDojo Silicon Valley Mountain View CA>, <Dojo: 8 codingDojo Seattle Seattle WA>, <Dojo: 10 codingDojo New York New York NY>]>


>>> Ninja.objects.first().first_name
u'Billy'
>>> Ninja.objects.last().first_name
u'Robert'

>>> Ninja.objects.first()
<Ninja: Billy Jean 4 CodingDojo Silicone Valley Mountain View Ca>

>>> Dojo.objects.all()
<QuerySet [<Dojo: 4 CodingDojo Silicone Valley Mountain View Ca>, <Dojo: 5 CodingDojo Seattle Seattle WA>, <Dojo: 6 CodingDojo New York new York NY>, <Dojo: 7 codingDojo Silicon Valley Mountain View CA>, <Dojo: 8 codingDojo Seattle Seattle WA>, <Dojo: 10 codingDojo New York New York NY>]>

>>> Dojo.objects.get(id=4).ninjas.all()
<QuerySet [<Ninja: Billy Jean 4 CodingDojo Silicone Valley Mountain View Ca>, <Ninja: Luke Skywalker 4 CodingDojo Silicone Valley Mountain View Ca>, <Ninja: Peter Parker 4 CodingDojo Silicone Valley Mountain View Ca>, <Ninja: Tom T 4 CodingDojo Silicone Valley Mountain View Ca>, <Ninja: Staci R 4 CodingDojo Silicone Valley Mountain View Ca>, <Ninja: Robert Paulson 4 CodingDojo Silicone Valley Mountain View Ca>]>


>>> student = Dojo.objects.get(id=4).ninjas.all()
>>> student1 = student[0]
>>> student1.first_name
u'Billy'
>>> Dojo.objects.get(id=4).ninjas.all()[0].first_name
u'Billy'
>>> Dojo.objects.get(id=4).ninjas.all()[1].first_name
u'Luke'
>>> Dojo.objects.get(id=4).ninjas.all()[2].first_name
u'Peter'
>>> Dojo.objects.get(id=4).ninjas.all()[3].first_name
u'Tom'

>>> students = Dojo.objects.get(id=4).ninjas.all()
>>> for idx in students:
...     print idx.first_name
...
Billy
Luke
Peter
Tom
Staci
Robert
>>>